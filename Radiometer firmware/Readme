Radiometer data transmitter
An Arduino MKR-GSM-1400 board based on the low power microcontroller SAMD21 32-bit and a SARA-U201 GSM cellular modem reads 2 analog inputs ( these could be more inputs or serial communications - ADC is 10-bit resolution) coming from 2, long and short wave Eppley radiometers, and send the read data with date and time-stamp every second ( could be changed) as a string into a TXT file that is uploaded to an FTP server. A TXT file is created every hour (could be changed). The code uses 3rd party libraries.
The outcoming voltage signals from both radiometers (0-10mV) are amplified to 0-3.3V matching the ADC in the microcontroller for best resolution, and amplification non-linearities are corrected by the sampling script.
Power supply is accomplished with a 12V 5Ah lead-acid battery, a turn-on/cut-off external circuit and a SX20U solar panel.  


This code is based on the MKRGSM FTP library: https://github.com/tryhus/MKRGSM/tree/feature/ftp

An Arduino MKR GSM 1400 with a SIM card with internet is needed for this project.

The program reads 2 analog values and with a time stamp creates a string with a fixed format MMDDYYhhmmssAAAABBBB every second (this can be changed in line 239). 

Then a .txt file with name MMDDYYhh ( or MMDDYYhhmm if files are created every less than an hour) is uploaded (streamed) to an FTP server.

At the beginning of the program the user is required to enter through the serial monitor the time size of samples that each file has.
i.e. if 60 is entered, a file will be created every 60 seconds, containing 60 strings with the predefined format. 900 for a file every 15 minutes and so on.

Then set the date and time to start the RTC.

Along the process the uploading progress will be shown in %.

If the process needs to be stoped, type "stop" to the serial monitor. The uploading process will finish once the current file is uploaded.

04132012.txt is a sample file created for a 15 minutes period for each file. 

** Check ARDUINO MKRGSM1400 FTP - instructions.zip to make the program work on the MKRGSM1400 **

Potential upgrade: The string could be "compressed" to reduce data traffic, changing the number's base, from decimal to other base like hexadecimal or base 36 (using 0-9...A-Z). The latter will reduce the Max number of 12319923595999999999 (20 char) to DDDDTTTTAAAAAAAA ( 14 char -30%). Convert Dat, time and analog values before, adding a '1' as he MSD to keep the structure.
i.e. Date: 1123199 -> change base / Time: 1235959 ->change base / Values: 199999999 -> change base
A code will be run on the PC the decode the strings back to their decimal values.
